From be56805d5ca635f245e6ba2f45ecafd33e5f01c6 Mon Sep 17 00:00:00 2001
From: Alexander Graf <agraf@suse.de>
Date: Thu, 2 Feb 2012 18:02:33 +0100
Subject: [PATCH 016/169] linux-user: binfmt: support host binaries

When we have a working host binary equivalent for the guest binary we're
trying to run, let's just use that instead as it will be a lot faster.

Signed-off-by: Alexander Graf <agraf@suse.de>
---
 linux-user/binfmt.c | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

Index: qemu-1.6.0+dfsg/linux-user/binfmt.c
===================================================================
--- qemu-1.6.0+dfsg.orig/linux-user/binfmt.c	2013-11-05 22:23:18.891427052 +0000
+++ qemu-1.6.0+dfsg/linux-user/binfmt.c	2013-11-05 22:23:18.887427063 +0000
@@ -5,6 +5,9 @@
 #include <string.h>
 #include <stdlib.h>
 
+#ifdef __x86_64__
+#define ARCH_NAME "x86_64"
+#endif
 
 int main(int argc, char **argv, char **envp)
 {
@@ -28,6 +31,28 @@
     binfmt[0] = '\0';
     /* Now argv[0] is the real qemu binary name */
 
+#ifdef ARCH_NAME
+    {
+        char *hostbin;
+        char *guestarch;
+
+        guestarch = strrchr(argv[0], '-') ;
+        if (!guestarch) {
+            goto skip;
+        }
+        guestarch++;
+        asprintf(&hostbin, "/emul/" ARCH_NAME "-for-%s/%s", guestarch, argv[1]);
+        if (!access(hostbin, X_OK)) {
+            /*
+             * We found a host binary replacement for the non-host binary. Let's
+             * use that instead!
+             */
+            return execve(hostbin, &argv[2], envp);
+        }
+    }
+skip:
+#endif
+
     new_argv = (char **)malloc((argc + 2) * sizeof(*new_argv));
     if (argc > 3) {
         memcpy(&new_argv[4], &argv[3], (argc - 3) * sizeof(*new_argv));
