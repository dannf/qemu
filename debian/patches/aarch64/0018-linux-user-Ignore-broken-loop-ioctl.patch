From e6947cc08ab57cd88989e8cc6e1905117485ac0d Mon Sep 17 00:00:00 2001
From: Alexander Graf <agraf@suse.de>
Date: Tue, 12 Jun 2012 04:41:10 +0200
Subject: [PATCH 018/169] linux-user: Ignore broken loop ioctl

During invocations of losetup, we run into an ioctl that doesn't
exist. However, because of that we output an error, which then
screws up the kiwi logic around that call.

So let's silently ignore that bogus ioctl.

Signed-off-by: Alexander Graf <agraf@suse.de>
---
 linux-user/ioctls.h       | 1 +
 linux-user/linux_loop.h   | 1 +
 linux-user/syscall.c      | 7 +++++++
 linux-user/syscall_defs.h | 1 +
 4 files changed, 10 insertions(+)

Index: qemu-1.6.0+dfsg/linux-user/ioctls.h
===================================================================
--- qemu-1.6.0+dfsg.orig/linux-user/ioctls.h	2013-11-05 22:23:19.279426049 +0000
+++ qemu-1.6.0+dfsg/linux-user/ioctls.h	2013-11-05 22:23:19.271426071 +0000
@@ -326,6 +326,7 @@
   IOCTL(LOOP_SET_STATUS64, IOC_W, MK_PTR(MK_STRUCT(STRUCT_loop_info64)))
   IOCTL(LOOP_GET_STATUS64, IOC_W, MK_PTR(MK_STRUCT(STRUCT_loop_info64)))
   IOCTL(LOOP_CHANGE_FD, 0, TYPE_INT)
+  IOCTL_SPECIAL(LOOP_BOGUS_CMD, 0, do_ioctl_fail, TYPE_INT)
 
   IOCTL(MTIOCTOP, IOC_W, MK_PTR(MK_STRUCT(STRUCT_mtop)))
   IOCTL(MTIOCGET, IOC_R, MK_PTR(MK_STRUCT(STRUCT_mtget)))
Index: qemu-1.6.0+dfsg/linux-user/linux_loop.h
===================================================================
--- qemu-1.6.0+dfsg.orig/linux-user/linux_loop.h	2013-11-05 22:23:19.279426049 +0000
+++ qemu-1.6.0+dfsg/linux-user/linux_loop.h	2013-11-05 22:23:19.271426071 +0000
@@ -91,5 +91,6 @@
 #define LOOP_SET_STATUS64	0x4C04
 #define LOOP_GET_STATUS64	0x4C05
 #define LOOP_CHANGE_FD		0x4C06
+#define LOOP_BOGUS_CMD		0x4C82
 
 #endif
Index: qemu-1.6.0+dfsg/linux-user/syscall.c
===================================================================
--- qemu-1.6.0+dfsg.orig/linux-user/syscall.c	2013-11-05 22:23:19.279426049 +0000
+++ qemu-1.6.0+dfsg/linux-user/syscall.c	2013-11-05 22:23:19.275426060 +0000
@@ -3626,6 +3626,13 @@
     return ret;
 }
 
+static abi_long do_ioctl_fail(const IOCTLEntry *ie, uint8_t *buf_temp, int fd,
+                              abi_long cmd, abi_long arg)
+{
+    /* Fail silently */
+    return -EINVAL;
+}
+
 static IOCTLEntry ioctl_entries[] = {
 #define IOCTL(cmd, access, ...) \
     { TARGET_ ## cmd, cmd, #cmd, access, 0, {  __VA_ARGS__ } },
Index: qemu-1.6.0+dfsg/linux-user/syscall_defs.h
===================================================================
--- qemu-1.6.0+dfsg.orig/linux-user/syscall_defs.h	2013-11-05 22:23:19.279426049 +0000
+++ qemu-1.6.0+dfsg/linux-user/syscall_defs.h	2013-11-05 22:23:19.275426060 +0000
@@ -1020,6 +1020,7 @@
 #define TARGET_LOOP_SET_STATUS64      0x4C04
 #define TARGET_LOOP_GET_STATUS64      0x4C05
 #define TARGET_LOOP_CHANGE_FD         0x4C06
+#define TARGET_LOOP_BOGUS_CMD         0x4C82
 
 /* fb ioctls */
 #define TARGET_FBIOGET_VSCREENINFO    0x4600
