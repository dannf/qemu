From 0fe5d0c62fe0265dfa8847665212fa7b2455e8bd Mon Sep 17 00:00:00 2001
From: Alexander Graf <agraf@suse.de>
Date: Mon, 11 Feb 2013 18:00:28 +0100
Subject: [PATCH 053/169] add clz and rbit

---
 target-arm/helper.c        | 24 ++++++++++++++++++++++++
 target-arm/helper.h        |  2 ++
 target-arm/translate-a64.c | 34 ++++++++++++++++++++++++++++++++--
 3 files changed, 58 insertions(+), 2 deletions(-)

Index: qemu-1.6.0+dfsg/target-arm/helper.c
===================================================================
--- qemu-1.6.0+dfsg.orig/target-arm/helper.c	2013-11-05 22:23:27.115405762 +0000
+++ qemu-1.6.0+dfsg/target-arm/helper.c	2013-11-05 22:23:27.107405782 +0000
@@ -4269,3 +4269,27 @@
     return rh;
 }
 
+uint64_t HELPER(rbit64)(uint64_t x)
+{
+    x =  ((x & 0xff00000000000000ULL) >> 56)
+       | ((x & 0x00ff000000000000ULL) >> 40)
+       | ((x & 0x0000ff0000000000ULL) >> 24)
+       | ((x & 0x000000ff00000000ULL) >> 8)
+       | ((x & 0x00000000ff000000ULL) << 8)
+       | ((x & 0x0000000000ff0000ULL) << 24)
+       | ((x & 0x000000000000ff00ULL) << 40)
+       | ((x & 0x00000000000000ffULL) << 56);
+    x =  ((x & 0xf0f0f0f0f0f0f0f0ULL) >> 4)
+       | ((x & 0x0f0f0f0f0f0f0f0fULL) << 4);
+    x =  ((x & 0x8888888888888888ULL) >> 3)
+       | ((x & 0x4444444444444444ULL) >> 1)
+       | ((x & 0x2222222222222222ULL) << 1)
+       | ((x & 0x1111111111111111ULL) << 3);
+    return x;
+}
+
+uint64_t HELPER(clz64)(uint64_t x)
+{
+    return clz64(x);
+}
+
Index: qemu-1.6.0+dfsg/target-arm/helper.h
===================================================================
--- qemu-1.6.0+dfsg.orig/target-arm/helper.h	2013-11-05 22:23:27.115405762 +0000
+++ qemu-1.6.0+dfsg/target-arm/helper.h	2013-11-05 22:23:27.107405782 +0000
@@ -471,6 +471,8 @@
 DEF_HELPER_FLAGS_2(sdiv64, TCG_CALL_NO_RWG_SE, s64, s64, s64)
 DEF_HELPER_FLAGS_2(umulh, TCG_CALL_NO_RWG_SE, i64, i64, i64)
 DEF_HELPER_FLAGS_2(smulh, TCG_CALL_NO_RWG_SE, i64, i64, i64)
+DEF_HELPER_FLAGS_1(rbit64, TCG_CALL_NO_RWG_SE, i64, i64)
+DEF_HELPER_FLAGS_1(clz64, TCG_CALL_NO_RWG_SE, i64, i64)
 DEF_HELPER_1(tb_flush, void, env)
 
 
Index: qemu-1.6.0+dfsg/target-arm/translate-a64.c
===================================================================
--- qemu-1.6.0+dfsg.orig/target-arm/translate-a64.c	2013-11-05 22:23:27.115405762 +0000
+++ qemu-1.6.0+dfsg/target-arm/translate-a64.c	2013-11-05 22:23:27.107405782 +0000
@@ -1181,8 +1181,7 @@
 
     switch (opc) {
     case 0x0: /* RBIT */
-        /* XXX */
-        unallocated_encoding(s);
+        gen_helper_rbit64(cpu_reg(rd), cpu_reg(rn));
         break;
     case 0x1: /* REV16 */
         tcg_gen_bswap16_i64(cpu_reg(rd), cpu_reg(rn));
@@ -1200,6 +1199,35 @@
     }
 }
 
+static void handle_clz(DisasContext *s, uint32_t insn)
+{
+    int rd = get_reg(insn);
+    int rn = get_bits(insn, 5, 5);
+    int opc = get_bits(insn, 10, 2);
+    bool is_32bit = !get_bits(insn, 31, 1);
+    TCGv_i64 tcg_val = tcg_temp_new_i64();
+
+    if (is_32bit) {
+        tcg_gen_ext32u_i64(tcg_val, cpu_reg(rn));
+    } else {
+        tcg_gen_mov_i64(tcg_val, cpu_reg(rn));
+    }
+
+    switch (opc) {
+    case 0x0: /* CLZ */
+        gen_helper_clz64(cpu_reg(rd), tcg_val);
+        if (is_32bit) {
+            tcg_gen_subi_i64(cpu_reg(rd), cpu_reg(rd), 32);
+        }
+        break;
+    case 0x1: /* CLS */
+        unallocated_encoding(s);
+        break;
+    }
+
+    tcg_temp_free_i64(tcg_val);
+}
+
 static void handle_mulh(DisasContext *s, uint32_t insn)
 {
     int rd = get_reg(insn);
@@ -1701,6 +1729,8 @@
             handle_lslv(s, insn);
         } else if ((insn & 0x7ffff000) == 0x5ac00000) {
             handle_rev(s, insn);
+        } else if ((insn & 0x7ffff800) == 0x5ac01000) {
+            handle_clz(s, insn);
         } else {
             goto unknown_insn;
         }
