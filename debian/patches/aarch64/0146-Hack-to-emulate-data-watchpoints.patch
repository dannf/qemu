From 40cc2ce35f2513f6d00c17f760828ee88d525abc Mon Sep 17 00:00:00 2001
From: Michael Matz <matz@suse.de>
Date: Mon, 8 Apr 2013 02:49:14 +0200
Subject: [PATCH 146/169] Hack to emulate data watchpoints

In user mode there are no data watchpoints, but I needed to
desparately find all writes to a certain address, this is the
result.  Could be extended to something really usable.
---
 target-arm/helper-a64.c    |  6 ++++++
 target-arm/helper.h        |  1 +
 target-arm/translate-a64.c | 16 +++++++++++-----
 3 files changed, 18 insertions(+), 5 deletions(-)

Index: qemu-1.6.0+dfsg/target-arm/helper-a64.c
===================================================================
--- qemu-1.6.0+dfsg.orig/target-arm/helper-a64.c	2013-11-05 22:23:45.799357396 +0000
+++ qemu-1.6.0+dfsg/target-arm/helper-a64.c	2013-11-05 22:23:45.795357406 +0000
@@ -376,3 +376,9 @@
     if (!is_q)
       env->vfp.regs[rd * 2 + 1] = 0;
 }
+
+void HELPER(cmp_addr)(uint64_t addr, uint64_t pc, uint32_t insn)
+{
+  if (addr == 0x4003af6000ULL)
+    qemu_log("cmp_addr==0x4003af6000ULL at 0x%lx, insn=0x%08x", pc, insn);
+}
Index: qemu-1.6.0+dfsg/target-arm/helper.h
===================================================================
--- qemu-1.6.0+dfsg.orig/target-arm/helper.h	2013-11-05 22:23:45.799357396 +0000
+++ qemu-1.6.0+dfsg/target-arm/helper.h	2013-11-05 22:23:45.795357406 +0000
@@ -499,6 +499,7 @@
 DEF_HELPER_FLAGS_3(simd_op3s, TCG_CALL_NO_RWG_SE, i64, i64, i64, i32)
 DEF_HELPER_4(simd_op3s_env, i64, env, i64, i64, i32)
 DEF_HELPER_2(simd_tbl, void, env, i32)
+DEF_HELPER_3(cmp_addr, void, i64, i64, i32)
 DEF_HELPER_1(tb_flush, void, env)
 DEF_HELPER_2(set_rmode, void, i32, ptr)
 
Index: qemu-1.6.0+dfsg/target-arm/translate-a64.c
===================================================================
--- qemu-1.6.0+dfsg.orig/target-arm/translate-a64.c	2013-11-05 22:23:45.799357396 +0000
+++ qemu-1.6.0+dfsg/target-arm/translate-a64.c	2013-11-05 22:23:45.795357406 +0000
@@ -37,6 +37,7 @@
 
 // #define DEBUG_SINGLESTEP 1
 // #define DEBUG_FLUSH 1
+// #define HACK_WATCHPOINTS
 
 static TCGv_i64 cpu_X[32];
 static TCGv_i64 cpu_pc;
@@ -1049,8 +1050,13 @@
 }
 
 static void ldst_do(DisasContext *s, int dest, TCGv_i64 tcg_addr, int size,
-                    bool is_store, bool is_signed, bool is_vector)
+                    bool is_store, bool is_signed, bool is_vector, uint32_t insn)
 {
+#ifdef HACK_WATCHPOINTS
+    TCGv_i32 tcg_insn = tcg_const_i32(insn);
+    gen_helper_cmp_addr (tcg_addr, cpu_pc, tcg_insn);
+    tcg_temp_free_i32(tcg_insn);
+#endif
     if (is_vector) {
         ldst_do_vec(s, dest, tcg_addr, size, is_store);
     } else {
@@ -1115,9 +1121,9 @@
         tcg_gen_addi_i64(tcg_addr, tcg_addr, offset);
     }
 
-    ldst_do(s, rt, tcg_addr, size, is_store, is_signed, is_vector);
+    ldst_do(s, rt, tcg_addr, size, is_store, is_signed, is_vector, insn);
     tcg_gen_addi_i64(tcg_addr, tcg_addr, 1 << size);
-    ldst_do(s, rt2, tcg_addr, size, is_store, is_signed, is_vector);
+    ldst_do(s, rt2, tcg_addr, size, is_store, is_signed, is_vector, insn);
     tcg_gen_subi_i64(tcg_addr, tcg_addr, 1 << size);
 
     if (wback) {
@@ -1300,7 +1306,7 @@
         goto out;
     }
 
-    ldst_do(s, dest, tcg_addr, size, false, is_signed, is_vector);
+    ldst_do(s, dest, tcg_addr, size, false, is_signed, is_vector, insn);
 
 out:
     tcg_temp_free_i64(tcg_addr);
@@ -1379,7 +1385,7 @@
         ldst_calc_index(s, tcg_addr, is_reg_offset, offset, size);
     }
 
-    ldst_do(s, dest, tcg_addr, size, is_store, is_signed, is_vector);
+    ldst_do(s, dest, tcg_addr, size, is_store, is_signed, is_vector, insn);
 
     if (postindex) {
         ldst_calc_index(s, tcg_addr, is_reg_offset, offset, size);
