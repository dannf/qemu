From ad0e8a31cec0bfaf8801a6ed3c33ec9c59a412a6 Mon Sep 17 00:00:00 2001
From: Andreas Schwab <schwab@suse.de>
Date: Thu, 28 Mar 2013 12:06:35 +0100
Subject: [PATCH 148/169] linux-user: add support for signalfd/signalfd4
 syscalls

Signed-off-by: Andreas Schwab <schwab@suse.de>
---
 configure            | 26 ++++++++++++++++++++++----
 linux-user/syscall.c | 37 +++++++++++++++++++++++++++++++++++++
 util/compatfd.c      |  4 ++--
 3 files changed, 61 insertions(+), 6 deletions(-)

Index: qemu-1.6.0+dfsg/configure
===================================================================
--- qemu-1.6.0+dfsg.orig/configure	2013-11-05 22:23:46.207356340 +0000
+++ qemu-1.6.0+dfsg/configure	2013-11-05 22:23:46.203356352 +0000
@@ -2729,7 +2729,7 @@
 
 ##########################################
 # signalfd probe
-signalfd="no"
+sys_signalfd="no"
 cat > $TMPC << EOF
 #include <unistd.h>
 #include <sys/syscall.h>
@@ -2738,7 +2738,7 @@
 EOF
 
 if compile_prog "" "" ; then
-  signalfd=yes
+  sys_signalfd=yes
 fi
 
 # check if eventfd is supported
@@ -2755,6 +2755,21 @@
   eventfd=yes
 fi
 
+# check if signalfd is supported
+signalfd="no"
+cat > $TMPC << EOF
+#include <sys/signalfd.h>
+int main(void)
+{
+   sigset_t mask;
+   return signalfd (-1, &mask, 0);
+}
+EOF
+
+if compile_prog "" "" ; then
+  signalfd=yes
+fi
+
 # check for fallocate
 fallocate=no
 cat > $TMPC << EOF
@@ -3826,6 +3841,9 @@
 if test "$eventfd" = "yes" ; then
   echo "CONFIG_EVENTFD=y" >> $config_host_mak
 fi
+if test "$signalfd" = "yes" ; then
+  echo "CONFIG_SIGNALFD=y" >> $config_host_mak
+fi
 if test "$fallocate" = "yes" ; then
   echo "CONFIG_FALLOCATE=y" >> $config_host_mak
 fi
@@ -3913,8 +3931,8 @@
 if test "$fdt" = "yes" ; then
   echo "CONFIG_FDT=y" >> $config_host_mak
 fi
-if test "$signalfd" = "yes" ; then
-  echo "CONFIG_SIGNALFD=y" >> $config_host_mak
+if test "$sys_signalfd" = "yes" ; then
+  echo "CONFIG_SYS_SIGNALFD=y" >> $config_host_mak
 fi
 if test "$tcg_interpreter" = "yes" ; then
   echo "CONFIG_TCG_INTERPRETER=y" >> $config_host_mak
Index: qemu-1.6.0+dfsg/linux-user/syscall.c
===================================================================
--- qemu-1.6.0+dfsg.orig/linux-user/syscall.c	2013-11-05 22:23:46.207356340 +0000
+++ qemu-1.6.0+dfsg/linux-user/syscall.c	2013-11-05 22:23:46.203356352 +0000
@@ -72,6 +72,9 @@
 #ifdef CONFIG_EVENTFD
 #include <sys/eventfd.h>
 #endif
+#ifdef CONFIG_SIGNALFD
+#include <sys/signalfd.h>
+#endif
 #ifdef CONFIG_EPOLL
 #include <sys/epoll.h>
 #endif
@@ -5197,6 +5200,28 @@
     return get_errno(open(path(pathname), flags, mode));
 }
 
+#if defined(CONFIG_SIGNALFD)
+#if defined(TARGET_NR_signalfd) || defined(TARGET_NR_signalfd4)
+static int do_signalfd(int fd, abi_ulong target_mask, size_t sizemask,
+                       int flags)
+{
+    abi_long ret;
+    sigset_t set;
+    void *p;
+
+    if (sizemask != sizeof(target_sigset_t))
+        return -TARGET_EINVAL;
+    if (!(p = lock_user(VERIFY_READ, target_mask, sizeof(target_sigset_t), 1)))
+        return -TARGET_EINVAL;
+    target_to_host_sigset(&set, p);
+    unlock_user(p, target_mask, 0);
+
+    ret = get_errno(signalfd(fd, &set, target_to_host_bitmask(flags, fcntl_flags_tbl)));
+    return ret;
+}
+#endif /* TARGET_NR_signalfd || TARGET_NR_signalfd4 */
+#endif /* CONFIG_SIGNALFD */
+
 /* resolve_dirfd_path - get the path relative to a dirfd
  *
  * return value:
@@ -9082,6 +9107,18 @@
     }
 #endif
 #endif /* CONFIG_EVENTFD  */
+#if defined(CONFIG_SIGNALFD)
+#if defined(TARGET_NR_signalfd)
+    case TARGET_NR_signalfd:
+        ret = do_signalfd(arg1, arg2, arg3, 0);
+        break;
+#endif
+#if defined(TARGET_NR_signalfd4)
+    case TARGET_NR_signalfd4:
+        ret = do_signalfd(arg1, arg2, arg3, arg4);
+        break;
+#endif
+#endif /* CONFIG_SIGNALFD */
 #if defined(CONFIG_FALLOCATE) && defined(TARGET_NR_fallocate)
     case TARGET_NR_fallocate:
 #if TARGET_ABI_BITS == 32
Index: qemu-1.6.0+dfsg/util/compatfd.c
===================================================================
--- qemu-1.6.0+dfsg.orig/util/compatfd.c	2013-11-05 22:23:46.207356340 +0000
+++ qemu-1.6.0+dfsg/util/compatfd.c	2013-11-05 22:23:46.203356352 +0000
@@ -105,7 +105,7 @@
 
 int qemu_signalfd(const sigset_t *mask)
 {
-#if defined(CONFIG_SIGNALFD)
+#if defined(CONFIG_SYS_SIGNALFD)
     int ret;
 
     ret = syscall(SYS_signalfd, -1, mask, _NSIG / 8);
@@ -120,7 +120,7 @@
 
 bool qemu_signalfd_available(void)
 {
-#ifdef CONFIG_SIGNALFD
+#ifdef CONFIG_SYS_SIGNALFD
     sigset_t mask;
     int fd;
     bool ok;
