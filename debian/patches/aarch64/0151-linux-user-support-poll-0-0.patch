From 1b07c494ae67fd024f7ab50490946e7b2290c70f Mon Sep 17 00:00:00 2001
From: Andreas Schwab <schwab@suse.de>
Date: Tue, 9 Apr 2013 23:19:53 +0200
Subject: [PATCH 151/169] linux-user: support poll(0,0,...)

---
 linux-user/syscall.c | 31 ++++++++++++++++++-------------
 1 file changed, 18 insertions(+), 13 deletions(-)

Index: qemu-1.6.0+dfsg/linux-user/syscall.c
===================================================================
--- qemu-1.6.0+dfsg.orig/linux-user/syscall.c	2013-11-05 22:23:46.847354684 +0000
+++ qemu-1.6.0+dfsg/linux-user/syscall.c	2013-11-05 22:23:46.843354693 +0000
@@ -7498,21 +7498,23 @@
     case TARGET_NR_ppoll:
 # endif
         {
-            struct target_pollfd *target_pfd;
+            struct target_pollfd *target_pfd = NULL;
             unsigned int nfds = arg2;
             int timeout = arg3;
-            struct pollfd *pfd;
+            struct pollfd *pfd = NULL;
             unsigned int i;
 
-            target_pfd = lock_user(VERIFY_WRITE, arg1, sizeof(struct target_pollfd) * nfds, 1);
-            if (!target_pfd)
-                goto efault;
-
-            pfd = alloca(sizeof(struct pollfd) * nfds);
-            for(i = 0; i < nfds; i++) {
-                pfd[i].fd = tswap32(target_pfd[i].fd);
-                pfd[i].events = tswap16(target_pfd[i].events);
-            }
+	    if (nfds) {
+		target_pfd = lock_user(VERIFY_WRITE, arg1, sizeof(struct target_pollfd) * nfds, 1);
+		if (!target_pfd)
+		    goto efault;
+
+		pfd = alloca(sizeof(struct pollfd) * nfds);
+		for(i = 0; i < nfds; i++) {
+		    pfd[i].fd = tswap32(target_pfd[i].fd);
+		    pfd[i].events = tswap16(target_pfd[i].events);
+		}
+	    }
 
 # ifdef TARGET_NR_ppoll
             if (num == TARGET_NR_ppoll) {
@@ -7522,7 +7524,8 @@
 
                 if (arg3) {
                     if (target_to_host_timespec(timeout_ts, arg3)) {
-                        unlock_user(target_pfd, arg1, 0);
+                        if (target_pfd)
+                            unlock_user(target_pfd, arg1, 0);
                         goto efault;
                     }
                 } else {
@@ -7532,7 +7535,8 @@
                 if (arg4) {
                     target_set = lock_user(VERIFY_READ, arg4, sizeof(target_sigset_t), 1);
                     if (!target_set) {
-                        unlock_user(target_pfd, arg1, 0);
+                        if (target_pfd)
+                            unlock_user(target_pfd, arg1, 0);
                         goto efault;
                     }
                     target_to_host_sigset(set, target_set);
@@ -7557,7 +7561,8 @@
                     target_pfd[i].revents = tswap16(pfd[i].revents);
                 }
             }
-            unlock_user(target_pfd, arg1, sizeof(struct target_pollfd) * nfds);
+            if (target_pfd)
+                unlock_user(target_pfd, arg1, sizeof(struct target_pollfd) * nfds);
         }
         break;
 #endif
