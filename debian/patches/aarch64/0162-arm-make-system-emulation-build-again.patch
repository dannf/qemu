From b1aa6d739d40adc80a59670db46e23471761efe2 Mon Sep 17 00:00:00 2001
From: Michael Matz <matz@suse.de>
Date: Fri, 16 Aug 2013 17:06:44 +0200
Subject: [PATCH 162/169] arm: make system emulation build again

Some fixups so that system emulation for arm32 builds
again.
---
 target-arm/machine.c       | 8 ++++----
 target-arm/translate-a64.c | 7 +++++--
 2 files changed, 9 insertions(+), 6 deletions(-)

Index: qemu-1.6.0+dfsg/target-arm/machine.c
===================================================================
--- qemu-1.6.0+dfsg.orig/target-arm/machine.c	2013-11-05 22:23:49.075348917 +0000
+++ qemu-1.6.0+dfsg/target-arm/machine.c	2013-11-05 22:23:49.071348927 +0000
@@ -41,7 +41,7 @@
     .minimum_version_id = 2,
     .minimum_version_id_old = 2,
     .fields = (VMStateField[]) {
-        VMSTATE_FLOAT64_ARRAY(env.vfp.regs, ARMCPU, 32),
+        VMSTATE_FLOAT64_ARRAY(env.vfp.regs, ARMCPU, 64),
         /* The xregs array is a little awkward because element 1 (FPSCR)
          * requires a specific accessor, so we have to split it up in
          * the vmstate:
@@ -253,9 +253,9 @@
         VMSTATE_VARRAY_INT32(cpreg_vmstate_values, ARMCPU,
                              cpreg_vmstate_array_len,
                              0, vmstate_info_uint64, uint64_t),
-        VMSTATE_UINT32(env.exclusive_addr, ARMCPU),
-        VMSTATE_UINT32(env.exclusive_val, ARMCPU),
-        VMSTATE_UINT32(env.exclusive_high, ARMCPU),
+        VMSTATE_UINT64(env.exclusive_addr, ARMCPU),
+        VMSTATE_UINT64(env.exclusive_val, ARMCPU),
+        VMSTATE_UINT64(env.exclusive_high, ARMCPU),
         VMSTATE_UINT64(env.features, ARMCPU),
         VMSTATE_TIMER(gt_timer[GTIMER_PHYS], ARMCPU),
         VMSTATE_TIMER(gt_timer[GTIMER_VIRT], ARMCPU),
Index: qemu-1.6.0+dfsg/target-arm/translate-a64.c
===================================================================
--- qemu-1.6.0+dfsg.orig/target-arm/translate-a64.c	2013-11-05 22:23:49.075348917 +0000
+++ qemu-1.6.0+dfsg/target-arm/translate-a64.c	2013-11-05 22:23:49.071348927 +0000
@@ -1187,18 +1187,21 @@
     tcg_gen_mov_i64(cpu_exclusive_addr, addr);
 }
 
-#ifdef CONFIG_USER_ONLY
 static void gen_store_exclusive(DisasContext *s, int rd, int rt, int rt2,
                                 TCGv_i64 addr, int size, int is_pair)
 {
+#ifdef CONFIG_USER_ONLY
     tcg_gen_mov_i64(cpu_exclusive_test, addr);
     tcg_gen_movi_i64(cpu_exclusive_info,
                      size | is_pair << 2 | (rd << 4) | (rt << 9) | (rt2 << 14));
     gen_exception_insn(s, 4, EXCP_STREX);
-}
 #else
+#ifdef TARGET_ARM64
 #error implement gen_store_exclusive for system mode (see target-arm/translate.c)
 #endif
+    gen_exception_insn(s, 4, EXCP_UDEF);
+#endif
+}
 
 static void handle_ldarx(DisasContext *s, uint32_t insn)
 {
